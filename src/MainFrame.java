
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nauzetaduen
 */
public class MainFrame extends javax.swing.JFrame {
    private int currentTotalStats = 75;
    private final int MAX_STATS = 225;
    private final ArrayList<String> skillList = new ArrayList<>();
    private ArrayList<String> skillTemplate = new ArrayList<>();
    JFileChooser fileChooser = new JFileChooser();
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        populateSkillList();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        namePanel = new javax.swing.JPanel();
        templateLabel = new javax.swing.JLabel();
        templateTextField = new javax.swing.JTextField();
        skillsPanel = new javax.swing.JPanel();
        combo1 = new javax.swing.JComboBox<>();
        combo3 = new javax.swing.JComboBox<>();
        combo2 = new javax.swing.JComboBox<>();
        combo6 = new javax.swing.JComboBox<>();
        combo5 = new javax.swing.JComboBox<>();
        combo4 = new javax.swing.JComboBox<>();
        combo7 = new javax.swing.JComboBox<>();
        statsPanel = new javax.swing.JPanel();
        intLabel = new javax.swing.JLabel();
        intSlider = new javax.swing.JSlider();
        intTextField = new javax.swing.JTextField();
        strLabel = new javax.swing.JLabel();
        strSlider = new javax.swing.JSlider();
        strTextField = new javax.swing.JTextField();
        dexLabel = new javax.swing.JLabel();
        dexSlider = new javax.swing.JSlider();
        dexTextField = new javax.swing.JTextField();
        toogleInt = new javax.swing.JToggleButton();
        toogleStr = new javax.swing.JToggleButton();
        toogleDex = new javax.swing.JToggleButton();
        totalLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        loadMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        separatorMenuItems = new javax.swing.JPopupMenu.Separator();
        deleteMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        whoMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        templateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        templateLabel.setText("Template's Name:");

        templateTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout namePanelLayout = new javax.swing.GroupLayout(namePanel);
        namePanel.setLayout(namePanelLayout);
        namePanelLayout.setHorizontalGroup(
            namePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, namePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(templateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(templateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );
        namePanelLayout.setVerticalGroup(
            namePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(namePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(namePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(templateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(templateLabel))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        skillsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Skills"));

        combo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alchemy", "Anatomy", "Animal Lore", "Animal Taming", "Archery", "Arms Lore", "Begging", "Blacksmithy", "Bowcraft/Fletching", "Camping", "Carpentry", "Cartography", "Cooking", "Detecting Hidden", "Discordance", "Evaluating Inteligence", "Fencing", "Fishing", "Forensic Evaluation", "Healing", "Herding", "Hiding", "Inscription", "Item Identification", "Lockpicking", "Lumberjacking", "Mace Fighting", "Magery", "Meditation", "Mining", "Musicianship", "Parrying", "Peacemaking", "Poisoning", "Provocation", "Remove Trap", "Resisting Spells", "Snooping", "Spirit Speak", "Stealing", "Swordsmanship", "Tactics", "Tailoring", "Taste Identification", "Tinkering", "Tracking", "Veterinary", "Wrestling" }));

        combo3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alchemy", "Anatomy", "Animal Lore", "Animal Taming", "Archery", "Arms Lore", "Begging", "Blacksmithy", "Bowcraft/Fletching", "Camping", "Carpentry", "Cartography", "Cooking", "Detecting Hidden", "Discordance", "Evaluating Inteligence", "Fencing", "Fishing", "Forensic Evaluation", "Healing", "Herding", "Hiding", "Inscription", "Item Identification", "Lockpicking", "Lumberjacking", "Mace Fighting", "Magery", "Meditation", "Mining", "Musicianship", "Parrying", "Peacemaking", "Poisoning", "Provocation", "Remove Trap", "Resisting Spells", "Snooping", "Spirit Speak", "Stealing", "Swordsmanship", "Tactics", "Tailoring", "Taste Identification", "Tinkering", "Tracking", "Veterinary", "Wrestling" }));

        combo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alchemy", "Anatomy", "Animal Lore", "Animal Taming", "Archery", "Arms Lore", "Begging", "Blacksmithy", "Bowcraft/Fletching", "Camping", "Carpentry", "Cartography", "Cooking", "Detecting Hidden", "Discordance", "Evaluating Inteligence", "Fencing", "Fishing", "Forensic Evaluation", "Healing", "Herding", "Hiding", "Inscription", "Item Identification", "Lockpicking", "Lumberjacking", "Mace Fighting", "Magery", "Meditation", "Mining", "Musicianship", "Parrying", "Peacemaking", "Poisoning", "Provocation", "Remove Trap", "Resisting Spells", "Snooping", "Spirit Speak", "Stealing", "Swordsmanship", "Tactics", "Tailoring", "Taste Identification", "Tinkering", "Tracking", "Veterinary", "Wrestling" }));

        combo6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alchemy", "Anatomy", "Animal Lore", "Animal Taming", "Archery", "Arms Lore", "Begging", "Blacksmithy", "Bowcraft/Fletching", "Camping", "Carpentry", "Cartography", "Cooking", "Detecting Hidden", "Discordance", "Evaluating Inteligence", "Fencing", "Fishing", "Forensic Evaluation", "Healing", "Herding", "Hiding", "Inscription", "Item Identification", "Lockpicking", "Lumberjacking", "Mace Fighting", "Magery", "Meditation", "Mining", "Musicianship", "Parrying", "Peacemaking", "Poisoning", "Provocation", "Remove Trap", "Resisting Spells", "Snooping", "Spirit Speak", "Stealing", "Swordsmanship", "Tactics", "Tailoring", "Taste Identification", "Tinkering", "Tracking", "Veterinary", "Wrestling" }));

        combo5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alchemy", "Anatomy", "Animal Lore", "Animal Taming", "Archery", "Arms Lore", "Begging", "Blacksmithy", "Bowcraft/Fletching", "Camping", "Carpentry", "Cartography", "Cooking", "Detecting Hidden", "Discordance", "Evaluating Inteligence", "Fencing", "Fishing", "Forensic Evaluation", "Healing", "Herding", "Hiding", "Inscription", "Item Identification", "Lockpicking", "Lumberjacking", "Mace Fighting", "Magery", "Meditation", "Mining", "Musicianship", "Parrying", "Peacemaking", "Poisoning", "Provocation", "Remove Trap", "Resisting Spells", "Snooping", "Spirit Speak", "Stealing", "Swordsmanship", "Tactics", "Tailoring", "Taste Identification", "Tinkering", "Tracking", "Veterinary", "Wrestling" }));

        combo4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alchemy", "Anatomy", "Animal Lore", "Animal Taming", "Archery", "Arms Lore", "Begging", "Blacksmithy", "Bowcraft/Fletching", "Camping", "Carpentry", "Cartography", "Cooking", "Detecting Hidden", "Discordance", "Evaluating Inteligence", "Fencing", "Fishing", "Forensic Evaluation", "Healing", "Herding", "Hiding", "Inscription", "Item Identification", "Lockpicking", "Lumberjacking", "Mace Fighting", "Magery", "Meditation", "Mining", "Musicianship", "Parrying", "Peacemaking", "Poisoning", "Provocation", "Remove Trap", "Resisting Spells", "Snooping", "Spirit Speak", "Stealing", "Swordsmanship", "Tactics", "Tailoring", "Taste Identification", "Tinkering", "Tracking", "Veterinary", "Wrestling" }));

        combo7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alchemy", "Anatomy", "Animal Lore", "Animal Taming", "Archery", "Arms Lore", "Begging", "Blacksmithy", "Bowcraft/Fletching", "Camping", "Carpentry", "Cartography", "Cooking", "Detecting Hidden", "Discordance", "Evaluating Inteligence", "Fencing", "Fishing", "Forensic Evaluation", "Healing", "Herding", "Hiding", "Inscription", "Item Identification", "Lockpicking", "Lumberjacking", "Mace Fighting", "Magery", "Meditation", "Mining", "Musicianship", "Parrying", "Peacemaking", "Poisoning", "Provocation", "Remove Trap", "Resisting Spells", "Snooping", "Spirit Speak", "Stealing", "Swordsmanship", "Tactics", "Tailoring", "Taste Identification", "Tinkering", "Tracking", "Veterinary", "Wrestling" }));

        javax.swing.GroupLayout skillsPanelLayout = new javax.swing.GroupLayout(skillsPanel);
        skillsPanel.setLayout(skillsPanelLayout);
        skillsPanelLayout.setHorizontalGroup(
            skillsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(skillsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(skillsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(combo6, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(combo5, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(combo4, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(combo3, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(combo2, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(combo1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo7, 0, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        skillsPanelLayout.setVerticalGroup(
            skillsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(skillsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        statsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Stats"));

        intLabel.setForeground(java.awt.Color.blue);
        intLabel.setText("Int");

        intSlider.setMinimum(25);
        intSlider.setValue(25);
        intSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        intSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                intSliderStateChanged(evt);
            }
        });

        intTextField.setText("25");
        intTextField.setDisabledTextColor(java.awt.Color.black);
        intTextField.setEnabled(false);

        strLabel.setForeground(java.awt.Color.red);
        strLabel.setText("Str");

        strSlider.setMinimum(25);
        strSlider.setValue(25);
        strSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                strSliderStateChanged(evt);
            }
        });

        strTextField.setText("25");
        strTextField.setDisabledTextColor(java.awt.Color.black);
        strTextField.setEnabled(false);

        dexLabel.setForeground(java.awt.Color.green);
        dexLabel.setText("Dex");

        dexSlider.setMinimum(25);
        dexSlider.setValue(25);
        dexSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dexSliderStateChanged(evt);
            }
        });

        dexTextField.setText("25");
        dexTextField.setDisabledTextColor(java.awt.Color.black);
        dexTextField.setEnabled(false);

        toogleInt.setText("L");
        toogleInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toogleIntActionPerformed(evt);
            }
        });

        toogleStr.setText("L");
        toogleStr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toogleStrActionPerformed(evt);
            }
        });

        toogleDex.setText("L");
        toogleDex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toogleDexActionPerformed(evt);
            }
        });

        totalLabel.setText("Total: 225");

        javax.swing.GroupLayout statsPanelLayout = new javax.swing.GroupLayout(statsPanel);
        statsPanel.setLayout(statsPanelLayout);
        statsPanelLayout.setHorizontalGroup(
            statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(intLabel)
                    .addComponent(strLabel)
                    .addComponent(dexLabel)
                    .addComponent(totalLabel)
                    .addGroup(statsPanelLayout.createSequentialGroup()
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, statsPanelLayout.createSequentialGroup()
                                .addComponent(dexSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dexTextField))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, statsPanelLayout.createSequentialGroup()
                                .addComponent(strSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(strTextField))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, statsPanelLayout.createSequentialGroup()
                                .addComponent(intSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(intTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(toogleInt, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(toogleStr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statsPanelLayout.createSequentialGroup()
                                .addComponent(toogleDex, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        statsPanelLayout.setVerticalGroup(
            statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsPanelLayout.createSequentialGroup()
                .addComponent(intLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(intTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(toogleInt))
                    .addComponent(intSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(strLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(strTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(toogleStr))
                    .addComponent(strSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dexLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dexSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dexTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(toogleDex)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(totalLabel)
                .addContainerGap())
        );

        fileMenu.setText("File");

        loadMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        loadMenuItem.setText("Load Template");
        loadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(loadMenuItem);

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        saveMenuItem.setText("Save Template");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);
        fileMenu.add(separatorMenuItems);

        deleteMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, 0));
        deleteMenuItem.setText("Delete Template");
        fileMenu.add(deleteMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText("Help");

        whoMenuItem.setText("whoami");
        whoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whoMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(whoMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(namePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(skillsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(statsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(namePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(skillsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void intSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_intSliderStateChanged
        if (isMaxed()) {
            intSlider.setMaximum(intSlider.getValue());
        } else {
            intSlider.setMaximum(100);
        }
        intTextField.setText(String.valueOf(intSlider.getValue()));
        currentTotalStats = intSlider.getValue() + strSlider.getValue() + dexSlider.getValue();
        setTotal(currentTotalStats);


    }//GEN-LAST:event_intSliderStateChanged

    private void strSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_strSliderStateChanged
        if (isMaxed()) {
            strSlider.setMaximum(strSlider.getValue());
        } else {
            strSlider.setMaximum(100);
        }
        strTextField.setText(String.valueOf(strSlider.getValue()));
        currentTotalStats = intSlider.getValue() + strSlider.getValue() + dexSlider.getValue();
        setTotal(currentTotalStats);

    }//GEN-LAST:event_strSliderStateChanged

    private void dexSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dexSliderStateChanged
        if (isMaxed()) {
            dexSlider.setMaximum(dexSlider.getValue());
        } else {
            dexSlider.setMaximum(100);
        }
        dexTextField.setText(String.valueOf(dexSlider.getValue()));
        currentTotalStats = intSlider.getValue() + strSlider.getValue() + dexSlider.getValue();
        setTotal(currentTotalStats);
    }//GEN-LAST:event_dexSliderStateChanged

    private void toogleIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toogleIntActionPerformed
        if (toogleInt.isSelected()){
            intSlider.setEnabled(false);
        }else{
            intSlider.setEnabled(true);
        }
    }//GEN-LAST:event_toogleIntActionPerformed

    private void toogleStrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toogleStrActionPerformed
        if (toogleStr.isSelected()){
            strSlider.setEnabled(false);
        }else{
            strSlider.setEnabled(true);
        }
    }//GEN-LAST:event_toogleStrActionPerformed

    private void toogleDexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toogleDexActionPerformed
        // TODO add your handling code here:
        if (toogleDex.isSelected()){
            dexSlider.setEnabled(false);
        }else{
            dexSlider.setEnabled(true);
        }
    }//GEN-LAST:event_toogleDexActionPerformed

    private void whoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whoMenuItemActionPerformed
        JOptionPane.showMessageDialog(rootPane, info(), "Info", JOptionPane.INFORMATION_MESSAGE);
        
        
        
    }//GEN-LAST:event_whoMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        int result = JOptionPane.showConfirmDialog(rootPane,
        "Are you sure you want to quit?",
        "Confirm Quit", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void loadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMenuItemActionPerformed
        // TODO add your handling code here:
        FileNameExtensionFilter filter = new FileNameExtensionFilter("UO Templates", "uot");
        fileChooser.setFileFilter(filter);
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            File file = fileChooser.getSelectedFile();
            try {
                loadTemplate(new UOTemplate(file));
                
            } catch (IOException ex) {}
        }
    }//GEN-LAST:event_loadMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
        setSkillTemplate();
        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            UOTemplate uot = new UOTemplate(templateTextField.getText(),
                                            intSlider.getValue(),
                                            strSlider.getValue(),
                                            dexSlider.getValue(),
                                            skillTemplate);
            try {
                writeFile(uot, fileChooser.getSelectedFile().getName());
            } catch (FileNotFoundException | UnsupportedEncodingException ex) {
            }
        }
    }//GEN-LAST:event_saveMenuItemActionPerformed

    public void setSkillTemplate() {
        skillTemplate.clear();
        skillTemplate.add((String) combo1.getSelectedItem());
        skillTemplate.add((String) combo2.getSelectedItem());
        skillTemplate.add((String) combo3.getSelectedItem());
        skillTemplate.add((String) combo4.getSelectedItem());
        skillTemplate.add((String) combo5.getSelectedItem());
        skillTemplate.add((String) combo6.getSelectedItem());
        skillTemplate.add((String) combo7.getSelectedItem());
    }
    private void loadTemplate(UOTemplate uot){
        templateTextField.setText(uot.getName());
        combo1.setSelectedItem(uot.getSkills().get(0));
        combo2.setSelectedItem(uot.getSkills().get(1));
        combo3.setSelectedItem(uot.getSkills().get(2));
        combo4.setSelectedItem(uot.getSkills().get(3));
        combo5.setSelectedItem(uot.getSkills().get(4));
        combo6.setSelectedItem(uot.getSkills().get(5));
        combo7.setSelectedItem(uot.getSkills().get(6));
        intSlider.setValue(uot.getInteligence());
        intTextField.setText(String.valueOf(uot.getInteligence()));
        strSlider.setValue(uot.getStrengh());
        strTextField.setText(String.valueOf(uot.getStrengh()));
        dexSlider.setValue(uot.getDexterity());
        dexTextField.setText(String.valueOf(uot.getDexterity()));
    }
    private void writeFile(UOTemplate uot, String filename) throws FileNotFoundException, UnsupportedEncodingException {
        try (PrintWriter writer = new PrintWriter(filename, "UTF-8")) {
            writer.println(uot.getName());
            writer.println(uot.getInteligence());
            writer.println(uot.getStrengh());
            writer.println(uot.getDexterity());
            for (String skill : uot.getSkills()) {
                writer.println(skill);
            }
            writer.close();
        }
    }

    private String info(){
        return "Developer: Nauzet Hernández\nPurpose: Mattise Learning\nYear: 2017";
    }
    
    private void setTotal(int total){
        if (total > 225){
            totalLabel.setForeground(Color.red);
        }else{
            totalLabel.setForeground(Color.black);
        }
        totalLabel.setText("Total: " + String.valueOf(total));
    }
    
    private boolean isMaxed(){
        return MAX_STATS <= currentTotalStats;
    }
   
    private void populateSkillList(){
        String[] arrayskills = {"Alchemy","Anatomy","Animal Lore","Animal Taming","Archery",
                                "Arms Lore","Begging","Blacksmithy", "Bowcraft/Fletching",
                                "Camping,Carpentry", "Cartography", "Cooking","Detecting Hidden",
                                "Discordance", "Evaluating Inteligence", "Fencing", "Fishing",
                                "Forensic Evaluation", "Healing", "Herding", "Hiding", "Inscription",
                                "Item Identification", "Lockpicking", "Lumberjacking", "Mace Fighting",
                                "Magery","Meditation", "Mining", "Musicianship", "Parrying", 
                                "Peacemaking", "Poisoning", "Provocation", "Remove Trap",
                                "Resisting Spells", "Snooping", "Spirit Speak", "Stealing", 
                                "Swordsmanship", "Tactics", "Tailoring", "Taste Identification",
                                "Tinkering", "Tracking", "Veterinary", "Wrestling"};
        for (String skill : arrayskills) {
            skillList.add(skill);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combo1;
    private javax.swing.JComboBox<String> combo2;
    private javax.swing.JComboBox<String> combo3;
    private javax.swing.JComboBox<String> combo4;
    private javax.swing.JComboBox<String> combo5;
    private javax.swing.JComboBox<String> combo6;
    private javax.swing.JComboBox<String> combo7;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JLabel dexLabel;
    private javax.swing.JSlider dexSlider;
    private javax.swing.JTextField dexTextField;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel intLabel;
    private javax.swing.JSlider intSlider;
    private javax.swing.JTextField intTextField;
    private javax.swing.JMenuItem loadMenuItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel namePanel;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JPopupMenu.Separator separatorMenuItems;
    private javax.swing.JPanel skillsPanel;
    private javax.swing.JPanel statsPanel;
    private javax.swing.JLabel strLabel;
    private javax.swing.JSlider strSlider;
    private javax.swing.JTextField strTextField;
    private javax.swing.JLabel templateLabel;
    private javax.swing.JTextField templateTextField;
    private javax.swing.JToggleButton toogleDex;
    private javax.swing.JToggleButton toogleInt;
    private javax.swing.JToggleButton toogleStr;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JMenuItem whoMenuItem;
    // End of variables declaration//GEN-END:variables
}
